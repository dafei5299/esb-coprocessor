apply plugin: "java"
apply plugin: "jetty"
apply plugin: "eclipse"
apply plugin: "war"

sourceCompatibility  = "1.7"
jettyRun.contextPath = ""
stopPort             = 4848
stopKey              = "stop"
test.testLogging.showStandardStreams = true
eclipse.classpath.defaultOutputDir   = file("$buildDir/output")

repositories {
	mavenCentral()
	maven {
		url "https://repository.cloudera.com/artifactory/cloudera-repos/"
	}
}
dependencies {
	// framework
	compile "org.springframework:spring-webmvc:3.2.3.RELEASE"
	compile "org.springframework:spring-jdbc:3.2.3.RELEASE"
	runtime "cglib:cglib-nodep:2.2.2"
	testCompile "org.springframework:spring-test:3.2.3.RELEASE"
	testCompile "junit:junit:4.11"

	// mysql
	compile "org.mybatis:mybatis:3.2.2"
	runtime "org.mybatis:mybatis-spring:1.2.0"
	runtime "com.mchange:c3p0:0.9.2.1"
	runtime "mysql:mysql-connector-java:5.1.25"

	// redis
	compile "redis.clients:jedis:2.1.0"
	compile "commons-pool:commons-pool:1.6"

	// jersey
	compile "com.sun.jersey:jersey-core:1.17.1"
	compile "com.sun.jersey:jersey-client:1.17.1"

	// zookeeper
	compile "org.apache.zookeeper:zookeeper:3.4.5-cdh4.3.1", {
		exclude module: "log4j"
		exclude module: "jline"
	}

	// tools
	compile "com.fasterxml.jackson.core:jackson-databind:2.2.2"
	compile "com.google.guava:guava:14.0.1"
	compile "joda-time:joda-time:2.2"

	// log
	compile "org.slf4j:slf4j-api:1.7.5"
	runtime "org.slf4j:jcl-over-slf4j:1.7.5"
	runtime "ch.qos.logback:logback-classic:1.0.13"
	
    //ssh
	compile "ch.ethz.ganymed:ganymed-ssh2:build210"
}
configurations {
	compile.exclude module: "commons-logging"
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}
task copyJars(type: Sync) {
	from configurations.runtime
	into "src/main/webapp/WEB-INF/lib"
}
task listJars << {
	println "compile:"
	configurations.compile
		.collect{ it.name }
		.sort()
		.each{ println "\t" + it }
	println "runtime:"
	(configurations.runtime-configurations.compile)
		.collect{ it.name }
		.sort()
		.each{ println "\t" + it }
	println "testCompile:"
	(configurations.testCompile-configurations.compile)
		.collect{ it.name }
		.sort()
		.each{ println "\t" + it }
}
